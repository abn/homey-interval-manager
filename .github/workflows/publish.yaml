name: Publish Package to npmjs
on:
  workflow_dispatch:
    inputs:
      isDryRun:
        description: "Is this a dry run?"
        type: choice
        required: true
        default: 'true'
        options:
          - true
          - false

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    # only allow running this workflow from main
    if: "${{ github.ref == 'refs/heads/main' && github.event.inputs.isDryRun == 'false' }}"

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get package version
        id: get-package-version
        shell: bash
        run: |
          run: echo "version=$(cat package.json  | jq -r .version)" >> $GITHUB_OUTPUT

      - name: Generate release tag
        id: tag
        uses: amitsingh-007/next-release-tag@64aa84a4d44eeae401c28ebdcf4afa5d56eba347
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"
          tag_template: ${{ steps.get-package-version.outputs.version }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.next_release_tag }}
          generateReleaseNotes: true
          makeLatest: true

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    # only allow running this workflow from main
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish package (dry-run)
        if: ${{ github.event.inputs.isDryRun == 'true' }}
        run: npm publish --provenance --access public ${{ github.event.inputs.additionalArgs }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish package
        if: ${{ github.event.inputs.isDryRun == 'false' }}
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
